* unit tests for time slicing
* nornagon 04/08/07

dbg: outs "# Time slicing and evalcosts"
dbg: outs "1..9"

* setv
setv var0 100
dbg: tslc var0
setv var1 42
subv var0 dbg: tslc
doif var0 eq 0
	dbg: outs "ok 1"
else
	dbg: outs "not ok 1"
endi

* doif
setv var0 100
dbg: tslc var0

doif 1 eq 2
	dbg: outs "not ok 2"
elif 3 eq 4
	dbg: outs "not ok 2"
else
	setv var1 2
endi

subv var0 dbg: tslc
doif var0 eq 0
	dbg: outs "ok 2"
else
	dbg: outs "not ok 2"
endi

* math
setv var0 100
dbg: tslc var0
setv var1 0
addv var1 17
divv var1 3
mulv var1 32
modv var1 6
rndv var1 -5 5
andv var1 3
orrv var1 8
subv var1 9
negv var1
subv var0 dbg: tslc
doif var0 eq 0
	dbg: outs "ok 3"
else
	dbg: outs "not ok 3"
endi

* new: simp
setv var0 100
dbg: tslc var0
new: simp eggs 1 0 1 0
subv var0 dbg: tslc
doif var0 eq 1
	dbg: outs "ok 4"
else
	dbg: outs "not ok 4"
endi
kill targ

* kill
new: simp eggs 1 0 1 0
setv var0 100
dbg: tslc var0
kill targ
subv var0 dbg: tslc
doif var0 eq 1
	dbg: outs "ok 5"
else
	dbg: outs "not ok 5"
endi

* pose
new: simp eggs 48 0 1 0
setv var0 100
dbg: tslc var0
pose 2
subv var0 dbg: tslc
doif var0 eq 1
	dbg: outs "ok 6"
else
	dbg: outs "not ok 6"
endi
kill targ

* anim
new: simp eggs 48 0 1 0
setv var0 100
dbg: tslc var0
anim [0101]
subv var0 dbg: tslc
doif var0 eq 1
	dbg: outs "ok 7"
else
	dbg: outs "not ok 7"
endi
kill targ

* loop..untl
setv var0 100
dbg: tslc var0
setv var1 0
loop
	addv var1 1
untl var1 ge 3
subv var0 dbg: tslc
doif var0 eq 0
	dbg: outs "ok 8"
else
	dbg: outs "not ok 8"
endi

* stim
setv var0 100
dbg: tslc var0
stim shou 100 1 30 0 0 0 0 0 0 0 0 0
subv var0 dbg: tslc
doif var0 eq 0
	dbg: outs "ok 9"
else
	dbg: outs "not ok 9"
endi
